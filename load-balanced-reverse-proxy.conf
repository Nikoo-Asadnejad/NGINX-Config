# Upstream configuration for load balancing
upstream backend_servers {
    # Define backend servers
    server 192.168.1.101:8080 max_fails=3 fail_timeout=30s; # Backend 1
    server 192.168.1.102:8080 max_fails=3 fail_timeout=30s; # Backend 2
    server 192.168.1.103:8080 max_fails=3 fail_timeout=30s; # Backend 3

    # Optional: Load balancing method (default is round-robin)
    # Uncomment one of the methods below as needed:

    # least_conn; # Least number of active connections
    # ip_hash;    # Sticky sessions based on client IP
}

# HTTP to HTTPS redirection
server {
    listen 80;
    server_name example.com www.example.com;

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name example.com www.example.com;

    # SSL settings
    ssl_certificate /etc/ssl/certs/example.com.crt;
    ssl_certificate_key /etc/ssl/private/example.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:...";
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Enable HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self';" always;

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 1000;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=limit_zone:10m rate=20r/s;

    # Access and error logs
    access_log /var/log/nginx/load-balanced-access.log;
    error_log /var/log/nginx/load-balanced-error.log;

    # Proxy configuration
    location / {
        proxy_pass http://backend_servers; # Use the upstream block for load balancing
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Limit request rate
        limit_req zone=limit_zone burst=20 nodelay;

        # Proxy cache
        proxy_cache cache_zone;
        proxy_cache_valid 200 1h;
        proxy_cache_valid 404 1m;
        add_header X-Cache-Status $upstream_cache_status;

        # Retry in case of failures
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
    }

    # Custom error pages
    error_page 404 /custom_404.html;
    location = /custom_404.html {
        root /var/www/html;
        internal;
    }

    error_page 500 502 503 504 /custom_50x.html;
    location = /custom_50x.html {
        root /var/www/html;
        internal;
    }
}

# Cache zone configuration
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=cache_zone:10m max_size=1g inactive=60m use_temp_path=off;
